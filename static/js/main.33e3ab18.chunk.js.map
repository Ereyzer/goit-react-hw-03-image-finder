{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","service/helpers/Fetch/Fetch.js","components/Loader/LoaderApp.js","components/Modal/Modal.js","components/Button/Button.js","components/App/App.js","index.js"],"names":["Searchbar","state","value","handleChange","e","setState","target","handleSubmit","preventDefault","onSubmit","props","this","className","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","image","alt","openModal","smallImg","largeImg","src","onClick","handleClick","ImageGallery","images","map","id","webformatURL","largeImageURL","tags","ApiService","BASE_KEY","BASE_URL","PAGE_COUNTER","Q","q","a","fetch","response","json","LoaderApp","color","height","width","modalRoot","document","querySelector","Modal","handleKeyDown","code","closeModal","handleBackdropClick","currentTarget","window","addEventListener","removeEventListener","modal","backdropClick","createPortal","Button","loadMore","text","propTapes","PropTypes","func","isRequired","apiService","Status","IDLE","PENDING","App","searchValue","status","button","searchService","fetchImages","then","hits","length","RESOLVED","r","Error","resp","scrollTo","top","documentElement","scrollHeight","behavior","notification","message","trim","toast","error","prevProps","prevState","snapshot","warning","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","PureComponent","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.33e3ab18.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Searchbar extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n  state = { value: '' };\n\n  handleChange = e => {\n    (() => this.setState({ value: e.target.value }))();\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const {\n      props: { onSubmit },\n      state: { value },\n    } = this;\n\n    onSubmit(value);\n  };\n\n  render() {\n    const {\n      state: { value },\n      handleChange,\n      handleSubmit,\n    } = this;\n\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={value}\n            onChange={handleChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class ImageGalleryItem extends Component {\n  static propTypes = {\n    smallImg: PropTypes.string.isRequired,\n    largeImg: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired,\n  };\n\n  handleClick(image, alt) {\n    this.props.openModal(image, alt);\n  }\n\n  render() {\n    const { smallImg, largeImg, alt } = this.props;\n\n    return (\n      <li className=\"ImageGalleryItem\">\n        <img\n          src={smallImg}\n          alt={alt}\n          className=\"ImageGalleryItem-image\"\n          onClick={() => this.handleClick(largeImg, alt)}\n        />\n      </li>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ImageGalleryItem } from '../ImageGalleryItem/ImageGalleryItem';\n\nexport function ImageGallery({ images, openModal }) {\n  return (\n    <ul className=\"ImageGallery\">\n      {images.map(({ id, webformatURL, largeImageURL, tags }) => (\n        <ImageGalleryItem\n          key={id}\n          smallImg={webformatURL}\n          largeImg={largeImageURL}\n          alt={tags}\n          openModal={openModal}\n        />\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  openModal: PropTypes.func.isRequired,\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","export default class ApiService {\n  BASE_KEY = '21932994-b9f805e2b70fd6b5c6454ae40';\n  BASE_URL = 'https://pixabay.com/api/';\n  PAGE_COUNTER = 0;\n  Q = '';\n  async fetchImages(q) {\n    if (this.Q !== q) {\n      this.Q = q;\n      this.PAGE_COUNTER = 0;\n    }\n    this.PAGE_COUNTER = this.PAGE_COUNTER + 1;\n    const response = await fetch(\n      `${this.BASE_URL}?key=${this.BASE_KEY}&q=${q}&page=${this.PAGE_COUNTER}&image_type=photo&orientation=horizontal&per_page=12`,\n    );\n    return await response.json();\n  }\n}\n","import Loader from 'react-loader-spinner';\nimport React from 'react';\nexport default function LoaderApp() {\n  return (\n    <Loader\n      type=\"Puff\"\n      color=\"#00BFFF\"\n      height={100}\n      width={100}\n      // timeout={3000} //3 secs\n    />\n  );\n}\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\n//! тут пропи не пишу бо вже вони є на GileryItem\n\nconst modalRoot = document.querySelector('#root-portal');\nexport class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillMount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.closeModal();\n    }\n  };\n\n  handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      this.props.closeModal();\n    }\n  };\n\n  render() {\n    const { image, tags } = this.props.modal;\n    const backdropClick = this.handleBackdropClick;\n\n    return createPortal(\n      <div className=\"Overlay\" onClick={backdropClick}>\n        <div className=\"Modal\">\n          <img src={image} alt={tags} />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nModal.propTapes = {\n  closeModal: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function Button({ loadMore, text }) {\n  return (\n    <button id=\"toScrol\" className=\"Button\" onClick={loadMore}>\n      {text}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  loadMore: PropTypes.func.isRequired,\n};\n","import './App.css';\nimport { Searchbar } from '../Searchbar/Searchbar';\nimport { PureComponent } from 'react';\nimport { ImageGallery } from '../ImageGallery/ImageGallery';\nimport ApiService from '../../service/helpers/Fetch/Fetch';\nimport LoaderApp from '../Loader/LoaderApp';\nimport { Modal } from '../Modal/Modal';\nimport { Button } from '../Button/Button';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nconst apiService = new ApiService();\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n};\n\nclass App extends PureComponent {\n  state = {\n    searchValue: null,\n    images: [],\n    status: Status.IDLE,\n    modal: null,\n    button: false,\n  };\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const { searchValue, status } = this.state;\n    if (status === 'pending') {\n      if (prevState.searchValue !== searchValue) {\n        if (searchValue === '') {\n          toast.warning('empty field');\n          this.setState({ status: Status.IDLE });\n          return;\n        }\n        this.setState({ images: [] });\n        this.searchService();\n      }\n    }\n  }\n\n  searchService = async () => {\n    const { searchValue } = this.state;\n    try {\n      const resp = await apiService\n        .fetchImages(searchValue)\n        .then(response => {\n          if (response.hits.length < 12) {\n            this.setState(({ images }) => ({\n              images: [...images, ...response.hits],\n              status: Status.RESOLVED,\n              button: false,\n            }));\n            return response;\n          }\n          this.setState(({ images }) => ({\n            images: [...images, ...response.hits],\n            status: Status.RESOLVED,\n            button: true,\n          }));\n          return response;\n        })\n        .then(r => {\n          if (r.hits.length === 0) throw Error('шоза хрінь?');\n        });\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n      return resp;\n    } catch (error) {\n      this.notification(error.message);\n    }\n  };\n\n  onSubmit = value => {\n    this.setState({\n      searchValue: value.trim(),\n      status: Status.PENDING,\n    });\n  };\n\n  openModal = (image, tags) => {\n    this.setState({ modal: { image, tags } });\n  };\n  closeModal = e => {\n    this.setState({ modal: null });\n    // this.changeStateModal();\n  };\n\n  // changeStateModal = () => {\n\n  // };\n\n  loadMore = e => {\n    this.setState({ status: Status.PENDING });\n    this.searchService();\n  };\n\n  notification = message => {\n    toast.error(message);\n  };\n\n  render() {\n    const {\n      state: { status, images, modal, button },\n      onSubmit,\n      closeModal,\n      openModal,\n      loadMore,\n    } = this;\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={onSubmit} />\n        <ImageGallery images={images} openModal={openModal} />\n        {status === 'pending' && <LoaderApp />}\n        {modal && <Modal modal={modal} closeModal={closeModal} />}\n        {button && <Button loadMore={loadMore} text=\"Load More\" />}\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={5000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n        <ToastContainer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}